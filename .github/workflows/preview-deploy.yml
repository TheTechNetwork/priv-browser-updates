name: Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened]
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    name: Run Tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
      
      - name: Generate test coverage report
        run: npm run test:coverage
      
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
      
      - name: Comment PR with coverage report
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: test-coverage
          message: |
            ## Test Coverage Report
            
            ```
            $(cat coverage/lcov-report/index.html | grep -A 5 "<div class='fl pad1y space-right2'>" | sed 's/<[^>]*>//g' | sed 's/^[ \t]*//' | grep -v "^$")
            ```

  preview-deploy:
    runs-on: ubuntu-latest
    name: Deploy Preview to Cloudflare Pages
    needs: test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Deploy to Cloudflare Pages (Preview)
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          projectName: chromium-update-server
          directory: dist
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          wranglerVersion: '3'

  preview-deploy-worker:
    runs-on: ubuntu-latest
    name: Deploy Worker Preview
    needs: test
    env:
      CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
      CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        working-directory: ./worker
        run: npm install

      - name: Install Wrangler
        run: npm install -g wrangler

      - name: Deploy Worker (Preview)
        working-directory: ./worker
        run: |
          # Create a unique name for the preview deployment
          PREVIEW_NAME="preview-$(echo ${{ github.head_ref }} | tr -cd '[a-zA-Z0-9]' | tr '[:upper:]' '[:lower:]' | cut -c 1-20)"
          
          # Deploy with the preview flag
          npx wrangler deploy --name $PREVIEW_NAME --env preview
          
          # Comment on PR with preview URL
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            PREVIEW_URL="https://$PREVIEW_NAME.${CLOUDFLARE_WORKER_DOMAIN:-workers.dev}"
            echo "::set-output name=preview_url::$PREVIEW_URL"
            
            # Add comment to PR
            curl -X POST \
              -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
              -H "Accept: application/vnd.github.v3+json" \
              "https://api.github.com/repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments" \
              -d "{\"body\":\"ðŸš€ Worker preview deployed to: $PREVIEW_URL\"}"
          fi
